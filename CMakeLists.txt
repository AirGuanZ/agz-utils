CMAKE_MINIMUM_REQUIRED(VERSION 3.10)

PROJECT(AGZ_UTILITY)

FILE(GLOB_RECURSE UTILITY_SRC
		"${PROJECT_SOURCE_DIR}/src/*.cpp"
		"${PROJECT_SOURCE_DIR}/include/*.h"
		"${PROJECT_SOURCE_DIR}/include/*.inl")
ADD_LIBRARY(AGZUtils STATIC ${UTILITY_SRC})

FOREACH(_SRC IN ITEMS ${UTILITY_SRC})
    GET_FILENAME_COMPONENT(UTILITY_SRC "${_SRC}" PATH)
    STRING(REPLACE "${PROJECT_SOURCE_DIR}/include/agz-utils" "include" _GRP_PATH "${UTILITY_SRC}")
    STRING(REPLACE "${PROJECT_SOURCE_DIR}/src" "src" _GRP_PATH "${_GRP_PATH}")
    STRING(REPLACE "/" "\\" _GRP_PATH "${_GRP_PATH}")
    SOURCE_GROUP("${_GRP_PATH}" FILES "${_SRC}")
ENDFOREACH()

IF(MSVC)
	TARGET_COMPILE_DEFINITIONS(AGZUtils PUBLIC _SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING)
ENDIF()

IF(NOT WIN32)
	IF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
		IF(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 9.0)
			SET(LINKER_FLAGS "-lc++fs -pthread")
		ELSE()
			SET(LINKER_FLAG "-lstdc++fs -pthread")
		ENDIF()
	ELSEIF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
		SET(LINKER_FLAG "-lstdc++fs -pthread")
	ENDIF()
ENDIF()

IF(MSVC)
	SET_PROPERTY(TARGET AGZUtils PROPERTY CXX_STANDARD 20)
ELSE()
	SET_PROPERTY(TARGET AGZUtils PROPERTY CXX_STANDARD 17)
ENDIF()

SET_PROPERTY(TARGET AGZUtils PROPERTY CXX_STANDARD_REQUIRED ON)

IF(DEFINED AGZ_ENABLE_D3D11 AND AGZ_ENABLE_D3D11)
	SET(AGZ_D3D11_LIBS d3d11.lib dxgi.lib d3dcompiler.lib dxguid.lib)
	TARGET_COMPILE_DEFINITIONS(AGZUtils PUBLIC AGZ_ENABLE_D3D11)
ENDIF()

IF(DEFINED AGZ_ENABLE_D3D12 AND AGZ_ENABLE_D3D12)
	TARGET_COMPILE_DEFINITIONS(AGZUtils PUBLIC AGZ_ENABLE_D3D12)
	ADD_SUBDIRECTORY("${PROJECT_SOURCE_DIR}/ext/D3D12MemAlloc")
	
	TARGET_INCLUDE_DIRECTORIES(AGZUtils PUBLIC "${PROJECT_SOURCE_DIR}/ext/d3dx12")
	SET(AGZ_D3D12_LIBS d3d12.lib dxgi.lib d3dcompiler.lib dxguid.lib D3D12MemAlloc)
	#SET(AGZ_D3D12_LIBS d3d12.lib dxgi.lib d3dcompiler.lib dxcompiler.lib dxguid.lib D3D12MemAlloc)
ENDIF()

if(DEFINED AGZ_ENABLE_GL AND AGZ_ENABLE_GL)
	ADD_SUBDIRECTORY(ext/glfw)
	ADD_SUBDIRECTORY(ext/glew)
	SET(AGZ_GL_LIBS glfw glew_s)
	TARGET_COMPILE_DEFINITIONS(AGZUtils PUBLIC AGZ_ENABLE_GL)
ENDIF()

TARGET_INCLUDE_DIRECTORIES(AGZUtils PUBLIC
	"${PROJECT_SOURCE_DIR}/include/"
	"${PROJECT_SOURCE_DIR}/ext/avir")

TARGET_LINK_LIBRARIES(AGZUtils PUBLIC
	${AGZ_D3D11_LIBS} ${AGZ_D3D12_LIBS} ${AGZ_GL_LIBS} ${LINKER_FLAG})
